{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","id","name","email","body","className","href","CommentList","comments","map","UserInfo","user","PostInfo","post","title","length","PostList","posts","postsFromServer","userId","usersFromServer","find","postId","commentsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"w38IAEaA,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpBC,EAA0BD,EAA1BC,GAAIC,EAAsBF,EAAtBE,KAAMC,EAAgBH,EAAhBG,MAAOC,EAASJ,EAATI,KAEzB,OACE,sBACEC,UAAU,cADZ,UAIE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SACGH,IAGH,wCAEA,mBACEG,UAAU,qBACVC,KAAI,iBAAYH,GAFlB,SAIGA,OAGL,qBAAKE,UAAU,oBAAf,SACGD,MAjBEH,ICLEM,G,MAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKH,UAAU,cAAf,SACGG,EAASC,KAAI,SAAAT,GAAO,OACnB,cAAC,EAAD,CAEEA,QAASA,GADJA,EAAQC,WCLRS,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,mBACEN,UAAU,WACVC,KAAI,iBAAYK,EAAKR,OAFvB,SAKGQ,EAAKT,MAFDS,EAAKV,MCFDW,G,MAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjBZ,EAAoCY,EAApCZ,GAAIa,EAAgCD,EAAhCC,MAAOH,EAAyBE,EAAzBF,KAAMP,EAAmBS,EAAnBT,KAAMI,EAAaK,EAAbL,SAE/B,OACE,sBACEH,UAAU,WADZ,UAIE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCS,IAEjC,8BACE,+CAEA,cAAC,EAAD,CAAUH,KAAMA,UAIpB,mBAAGN,UAAU,iBAAb,SACGD,IAGH,uBAECI,EAASO,OACN,cAAC,EAAD,CAAaP,SAAUA,IACvB,mBAAG,UAAQ,oBAAX,+BApBCP,KCPEe,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKZ,UAAU,WAAf,SACGY,EAAMR,KAAI,SAAAI,GAAI,OAAI,cAAC,EAAD,CAAwBA,KAAMA,GAAfA,EAAKZ,WCWpC,IAAMgB,EAAQC,EAAgBT,KAAI,SAAAI,GAAI,kCACxCA,GADwC,IAE3CF,MAVmBQ,EAUDN,EAAKM,OAThBC,EAAgBC,MAAK,SAAAV,GAAI,OAAIA,EAAKV,KAAOkB,MAUhDX,UAPsBc,EAOGT,EAAKZ,GANvBsB,EAAmBC,QAAO,SAAAxB,GAAO,OAAIA,EAAQsB,SAAWA,QADjE,IAAwBA,EAJHH,KAcRM,EAAM,kBACjB,0BAASpB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCACA,cAAC,EAAD,CAAUY,MAAOA,QCrBrBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6cefcc61.chunk.js","sourcesContent":["import './CommentInfo.scss';\n\nexport const CommentInfo = ({ comment }) => {\n  const { id, name, email, body } = comment;\n\n  return (\n    <div\n      className=\"CommentInfo\"\n      key={id}\n    >\n      <div className=\"CommentInfo__title\">\n        <strong className=\"CommentInfo__name\">\n          {name}\n        </strong>\n\n        <span> by </span>\n\n        <a\n          className=\"CommentInfo__email\"\n          href={`mailto:${email}`}\n        >\n          {email}\n        </a>\n      </div>\n      <div className=\"CommentInfo__body\">\n        {body}\n      </div>\n    </div>\n  );\n};\n","import { CommentInfo } from '../CommentInfo';\nimport './CommentList.scss';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments.map(comment => (\n      <CommentInfo\n        key={comment.id}\n        comment={comment}\n      />\n    ))}\n  </div>\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => (\n  <a\n    className=\"UserInfo\"\n    href={`mailto:${user.email}`}\n    key={user.id}\n  >\n    {user.name}\n  </a>\n);\n","import { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\nimport './PostInfo.scss';\n\nexport const PostInfo = ({ post }) => {\n  const { id, title, user, body, comments } = post;\n\n  return (\n    <div\n      className=\"PostInfo\"\n      key={id}\n    >\n      <div className=\"PostInfo__header\">\n        <h3 className=\"PostInfo__title\">{title}</h3>\n\n        <p>\n          <span> Posted by </span>\n\n          <UserInfo user={user} />\n        </p>\n      </div>\n\n      <p className=\"PostInfo__body\">\n        {body}\n      </p>\n\n      <hr />\n\n      {comments.length\n        ? <CommentList comments={comments} />\n        : <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n      }\n    </div>\n  );\n};\n","import { PostInfo } from '../PostInfo';\nimport './PostList.scss';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => <PostInfo key={post.id} post={post} />)}\n  </div>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\n\nimport { PostList } from './components/PostList';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId);\n}\n\nfunction getCommentById(postId) {\n  return commentsFromServer.filter(comment => comment.postId === postId);\n}\n\nexport const posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getCommentById(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}